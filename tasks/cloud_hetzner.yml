---
- name: Build python virtual environment
  import_tasks: venv_hetzner.yml

- name: Include prompts
  import_tasks: prompts_hetzner.yml

- name: Create SSH keys
  local_action:
    module: hcloud_ssh_key
    api_token: "{{ hcloud_token }}"
    name: "{{ item.name }}"
    public_key: "{{ item.key }}"
  loop: "{{ ssh_keys }}"
  run_once: yes

- name: Get VM info - check if exists
  local_action:
    module: hcloud_server_info
    api_token: "{{ hcloud_token }}"
    name: "{{ hcloud_vm_name }}"
  register: info_vm

- name: Print the gathered infos
  debug:
    var: info_vm

- name: Register the ip address if VM already exists
  add_host:
    hostname: '{{ hostvars[item].inventory_hostname }}'
    ansible_host: '{{ hostvars[item].info_vm.hcloud_server_info[0].ipv4_address }}'
  when: hostvars[item].info_vm.hcloud_server_info|count == 1
  with_items: "{{ ansible_play_hosts }}"

- name: Create a server
  local_action:
    module: hcloud_server
    api_token: "{{ hcloud_token }}"
    name: "{{ hcloud_vm_name }}"
    server_type: "{{ hcloud_server_type }}"
    location: "{{ hcloud_server_type }}"
    image: "{{ hcloud_image }}"
    state: present
    ssh_keys: "{{ ssh_keys|map(attribute='name')|list }}"
  register: create_vm

- set_fact:
    cloud_instance_ip: "{{ create_vm.hcloud_server.ipv4_address }}"
#    ansible_ssh_user: algo
#    ansible_ssh_port: "{{ ssh_port }}"
#    cloudinit: true